{"swagger":"2.0","info":{"version":"1.0.0","title":"zoo_api"},"basePath":"http://localhost/api","paths":{"/Users/{id}/accessTokens/{fk}":{"get":{"tags":["User"],"summary":"Find a related item by id for accessTokens.","operationId":"User.prototype.__findById__accessTokens","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for accessTokens","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessToken"}}},"deprecated":false},"delete":{"tags":["User"],"summary":"Delete a related item by id for accessTokens.","operationId":"User.prototype.__destroyById__accessTokens","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for accessTokens","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["User"],"summary":"Update a related item by id for accessTokens.","operationId":"User.prototype.__updateById__accessTokens","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for accessTokens","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/AccessToken"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessToken"}}},"deprecated":false}},"/Users/{id}/accessTokens":{"get":{"tags":["User"],"summary":"Queries accessTokens of User.","operationId":"User.prototype.__get__accessTokens","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/AccessToken"}}}},"deprecated":false},"post":{"tags":["User"],"summary":"Creates a new instance in accessTokens of this model.","operationId":"User.prototype.__create__accessTokens","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/AccessToken"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessToken"}}},"deprecated":false},"delete":{"tags":["User"],"summary":"Deletes all accessTokens of this model.","operationId":"User.prototype.__delete__accessTokens","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Users/{id}/accessTokens/count":{"get":{"tags":["User"],"summary":"Counts accessTokens of User.","operationId":"User.prototype.__count__accessTokens","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Users":{"post":{"tags":["User"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"User.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false},"patch":{"tags":["User"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"User.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false},"put":{"tags":["User"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"User.replaceOrCreate__put_Users","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false},"get":{"tags":["User"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"User.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/User"}}}},"deprecated":false}},"/Users/replaceOrCreate":{"post":{"tags":["User"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"User.replaceOrCreate__post_Users_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false}},"/Users/upsertWithWhere":{"post":{"tags":["User"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"User.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false}},"/Users/{id}/exists":{"get":{"tags":["User"],"summary":"Check whether a model instance exists in the data source.","operationId":"User.exists__get_Users_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Users/{id}":{"head":{"tags":["User"],"summary":"Check whether a model instance exists in the data source.","operationId":"User.exists__head_Users_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["User"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"User.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false},"put":{"tags":["User"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"User.replaceById__put_Users_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false},"delete":{"tags":["User"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"User.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["User"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"User.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false}},"/Users/{id}/replace":{"post":{"tags":["User"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"User.replaceById__post_Users_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false}},"/Users/findOne":{"get":{"tags":["User"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"User.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false}},"/Users/update":{"post":{"tags":["User"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"User.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/Users/count":{"get":{"tags":["User"],"summary":"Count instances of the model matched by where from the data source.","operationId":"User.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Users/change-stream":{"post":{"tags":["User"],"summary":"Create a change stream.","operationId":"User.createChangeStream__post_Users_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["User"],"summary":"Create a change stream.","operationId":"User.createChangeStream__get_Users_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/Users/login":{"post":{"tags":["User"],"summary":"Login a user with username/email and password.","operationId":"User.login","parameters":[{"name":"credentials","in":"body","required":true,"schema":{"type":"object"}},{"name":"include","in":"query","description":"Related objects to include in the response. See the description of return value for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"description":"The response body contains properties of the AccessToken created on login.\nDepending on the value of `include` parameter, the body may contain additional properties:\n\n  - `user` - `U+007BUserU+007D` - Data of the currently logged in user. (`include=user`)\n\n","type":"object"}}},"deprecated":false}},"/Users/logout":{"post":{"tags":["User"],"summary":"Logout a user with access token.","operationId":"User.logout","parameters":[],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Users/{id}/verify":{"post":{"tags":["User"],"summary":"Trigger user's identity verification with configured verifyOptions","operationId":"User.prototype.verify","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Users/confirm":{"get":{"tags":["User"],"summary":"Confirm a user registration with identity verification token.","operationId":"User.confirm","parameters":[{"name":"uid","in":"query","required":true,"type":"string"},{"name":"token","in":"query","required":true,"type":"string"},{"name":"redirect","in":"query","required":false,"type":"string"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Users/reset":{"post":{"tags":["User"],"summary":"Reset password for a user with email.","operationId":"User.resetPassword","parameters":[{"name":"options","in":"body","required":true,"schema":{"type":"object"}}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Users/change-password":{"post":{"tags":["User"],"summary":"Change a user's password.","operationId":"User.changePassword","parameters":[{"name":"oldPassword","in":"formData","required":true,"type":"string"},{"name":"newPassword","in":"formData","required":true,"type":"string"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Users/reset-password":{"post":{"tags":["User"],"summary":"Reset user's password via a password-reset token.","operationId":"User.setPassword","parameters":[{"name":"newPassword","in":"formData","required":true,"type":"string"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/WeightTables":{"post":{"tags":["WeightTable"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"WeightTable.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/WeightTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/WeightTable"}}},"deprecated":false},"patch":{"tags":["WeightTable"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"WeightTable.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/WeightTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/WeightTable"}}},"deprecated":false},"put":{"tags":["WeightTable"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"WeightTable.replaceOrCreate__put_WeightTables","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/WeightTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/WeightTable"}}},"deprecated":false},"get":{"tags":["WeightTable"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"WeightTable.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/WeightTable"}}}},"deprecated":false}},"/WeightTables/replaceOrCreate":{"post":{"tags":["WeightTable"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"WeightTable.replaceOrCreate__post_WeightTables_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/WeightTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/WeightTable"}}},"deprecated":false}},"/WeightTables/upsertWithWhere":{"post":{"tags":["WeightTable"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"WeightTable.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/WeightTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/WeightTable"}}},"deprecated":false}},"/WeightTables/{id}/exists":{"get":{"tags":["WeightTable"],"summary":"Check whether a model instance exists in the data source.","operationId":"WeightTable.exists__get_WeightTables_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/WeightTables/{id}":{"head":{"tags":["WeightTable"],"summary":"Check whether a model instance exists in the data source.","operationId":"WeightTable.exists__head_WeightTables_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["WeightTable"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"WeightTable.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/WeightTable"}}},"deprecated":false},"put":{"tags":["WeightTable"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"WeightTable.replaceById__put_WeightTables_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/WeightTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/WeightTable"}}},"deprecated":false},"delete":{"tags":["WeightTable"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"WeightTable.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["WeightTable"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"WeightTable.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"WeightTable id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/WeightTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/WeightTable"}}},"deprecated":false}},"/WeightTables/{id}/replace":{"post":{"tags":["WeightTable"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"WeightTable.replaceById__post_WeightTables_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/WeightTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/WeightTable"}}},"deprecated":false}},"/WeightTables/findOne":{"get":{"tags":["WeightTable"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"WeightTable.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/WeightTable"}}},"deprecated":false}},"/WeightTables/update":{"post":{"tags":["WeightTable"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"WeightTable.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/WeightTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/WeightTables/count":{"get":{"tags":["WeightTable"],"summary":"Count instances of the model matched by where from the data source.","operationId":"WeightTable.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/WeightTables/change-stream":{"post":{"tags":["WeightTable"],"summary":"Create a change stream.","operationId":"WeightTable.createChangeStream__post_WeightTables_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["WeightTable"],"summary":"Create a change stream.","operationId":"WeightTable.createChangeStream__get_WeightTables_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/AnimalTables":{"post":{"tags":["AnimalTable"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"AnimalTable.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/AnimalTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AnimalTable"}}},"deprecated":false},"patch":{"tags":["AnimalTable"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"AnimalTable.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/AnimalTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AnimalTable"}}},"deprecated":false},"put":{"tags":["AnimalTable"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"AnimalTable.replaceOrCreate__put_AnimalTables","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/AnimalTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AnimalTable"}}},"deprecated":false},"get":{"tags":["AnimalTable"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"AnimalTable.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/AnimalTable"}}}},"deprecated":false}},"/AnimalTables/replaceOrCreate":{"post":{"tags":["AnimalTable"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"AnimalTable.replaceOrCreate__post_AnimalTables_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/AnimalTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AnimalTable"}}},"deprecated":false}},"/AnimalTables/upsertWithWhere":{"post":{"tags":["AnimalTable"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"AnimalTable.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/AnimalTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AnimalTable"}}},"deprecated":false}},"/AnimalTables/{id}/exists":{"get":{"tags":["AnimalTable"],"summary":"Check whether a model instance exists in the data source.","operationId":"AnimalTable.exists__get_AnimalTables_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/AnimalTables/{id}":{"head":{"tags":["AnimalTable"],"summary":"Check whether a model instance exists in the data source.","operationId":"AnimalTable.exists__head_AnimalTables_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["AnimalTable"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"AnimalTable.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AnimalTable"}}},"deprecated":false},"put":{"tags":["AnimalTable"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"AnimalTable.replaceById__put_AnimalTables_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/AnimalTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AnimalTable"}}},"deprecated":false},"delete":{"tags":["AnimalTable"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"AnimalTable.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["AnimalTable"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"AnimalTable.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"AnimalTable id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/AnimalTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AnimalTable"}}},"deprecated":false}},"/AnimalTables/{id}/replace":{"post":{"tags":["AnimalTable"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"AnimalTable.replaceById__post_AnimalTables_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/AnimalTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AnimalTable"}}},"deprecated":false}},"/AnimalTables/findOne":{"get":{"tags":["AnimalTable"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"AnimalTable.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AnimalTable"}}},"deprecated":false}},"/AnimalTables/update":{"post":{"tags":["AnimalTable"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"AnimalTable.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/AnimalTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/AnimalTables/count":{"get":{"tags":["AnimalTable"],"summary":"Count instances of the model matched by where from the data source.","operationId":"AnimalTable.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/AnimalTables/change-stream":{"post":{"tags":["AnimalTable"],"summary":"Create a change stream.","operationId":"AnimalTable.createChangeStream__post_AnimalTables_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["AnimalTable"],"summary":"Create a change stream.","operationId":"AnimalTable.createChangeStream__get_AnimalTables_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/BudgetIdTables":{"post":{"tags":["BudgetIdTable"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"BudgetIdTable.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/BudgetIdTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/BudgetIdTable"}}},"deprecated":false},"patch":{"tags":["BudgetIdTable"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"BudgetIdTable.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/BudgetIdTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/BudgetIdTable"}}},"deprecated":false},"put":{"tags":["BudgetIdTable"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"BudgetIdTable.replaceOrCreate__put_BudgetIdTables","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/BudgetIdTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/BudgetIdTable"}}},"deprecated":false},"get":{"tags":["BudgetIdTable"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"BudgetIdTable.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/BudgetIdTable"}}}},"deprecated":false}},"/BudgetIdTables/replaceOrCreate":{"post":{"tags":["BudgetIdTable"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"BudgetIdTable.replaceOrCreate__post_BudgetIdTables_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/BudgetIdTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/BudgetIdTable"}}},"deprecated":false}},"/BudgetIdTables/upsertWithWhere":{"post":{"tags":["BudgetIdTable"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"BudgetIdTable.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/BudgetIdTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/BudgetIdTable"}}},"deprecated":false}},"/BudgetIdTables/{id}/exists":{"get":{"tags":["BudgetIdTable"],"summary":"Check whether a model instance exists in the data source.","operationId":"BudgetIdTable.exists__get_BudgetIdTables_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/BudgetIdTables/{id}":{"head":{"tags":["BudgetIdTable"],"summary":"Check whether a model instance exists in the data source.","operationId":"BudgetIdTable.exists__head_BudgetIdTables_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["BudgetIdTable"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"BudgetIdTable.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/BudgetIdTable"}}},"deprecated":false},"put":{"tags":["BudgetIdTable"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"BudgetIdTable.replaceById__put_BudgetIdTables_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/BudgetIdTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/BudgetIdTable"}}},"deprecated":false},"delete":{"tags":["BudgetIdTable"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"BudgetIdTable.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["BudgetIdTable"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"BudgetIdTable.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"BudgetIdTable id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/BudgetIdTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/BudgetIdTable"}}},"deprecated":false}},"/BudgetIdTables/{id}/replace":{"post":{"tags":["BudgetIdTable"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"BudgetIdTable.replaceById__post_BudgetIdTables_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/BudgetIdTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/BudgetIdTable"}}},"deprecated":false}},"/BudgetIdTables/findOne":{"get":{"tags":["BudgetIdTable"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"BudgetIdTable.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/BudgetIdTable"}}},"deprecated":false}},"/BudgetIdTables/update":{"post":{"tags":["BudgetIdTable"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"BudgetIdTable.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/BudgetIdTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/BudgetIdTables/count":{"get":{"tags":["BudgetIdTable"],"summary":"Count instances of the model matched by where from the data source.","operationId":"BudgetIdTable.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/BudgetIdTables/change-stream":{"post":{"tags":["BudgetIdTable"],"summary":"Create a change stream.","operationId":"BudgetIdTable.createChangeStream__post_BudgetIdTables_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["BudgetIdTable"],"summary":"Create a change stream.","operationId":"BudgetIdTable.createChangeStream__get_BudgetIdTables_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/CaseNotes":{"post":{"tags":["CaseNotes"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"CaseNotes.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/CaseNotes"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/CaseNotes"}}},"deprecated":false},"patch":{"tags":["CaseNotes"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"CaseNotes.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/CaseNotes"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/CaseNotes"}}},"deprecated":false},"put":{"tags":["CaseNotes"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"CaseNotes.replaceOrCreate__put_CaseNotes","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/CaseNotes"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/CaseNotes"}}},"deprecated":false},"get":{"tags":["CaseNotes"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"CaseNotes.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/CaseNotes"}}}},"deprecated":false}},"/CaseNotes/replaceOrCreate":{"post":{"tags":["CaseNotes"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"CaseNotes.replaceOrCreate__post_CaseNotes_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/CaseNotes"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/CaseNotes"}}},"deprecated":false}},"/CaseNotes/upsertWithWhere":{"post":{"tags":["CaseNotes"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"CaseNotes.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/CaseNotes"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/CaseNotes"}}},"deprecated":false}},"/CaseNotes/{id}/exists":{"get":{"tags":["CaseNotes"],"summary":"Check whether a model instance exists in the data source.","operationId":"CaseNotes.exists__get_CaseNotes_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/CaseNotes/{id}":{"head":{"tags":["CaseNotes"],"summary":"Check whether a model instance exists in the data source.","operationId":"CaseNotes.exists__head_CaseNotes_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["CaseNotes"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"CaseNotes.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/CaseNotes"}}},"deprecated":false},"put":{"tags":["CaseNotes"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"CaseNotes.replaceById__put_CaseNotes_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/CaseNotes"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/CaseNotes"}}},"deprecated":false},"delete":{"tags":["CaseNotes"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"CaseNotes.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["CaseNotes"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"CaseNotes.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"CaseNotes id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/CaseNotes"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/CaseNotes"}}},"deprecated":false}},"/CaseNotes/{id}/replace":{"post":{"tags":["CaseNotes"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"CaseNotes.replaceById__post_CaseNotes_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/CaseNotes"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/CaseNotes"}}},"deprecated":false}},"/CaseNotes/findOne":{"get":{"tags":["CaseNotes"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"CaseNotes.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/CaseNotes"}}},"deprecated":false}},"/CaseNotes/update":{"post":{"tags":["CaseNotes"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"CaseNotes.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/CaseNotes"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/CaseNotes/count":{"get":{"tags":["CaseNotes"],"summary":"Count instances of the model matched by where from the data source.","operationId":"CaseNotes.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/CaseNotes/change-stream":{"post":{"tags":["CaseNotes"],"summary":"Create a change stream.","operationId":"CaseNotes.createChangeStream__post_CaseNotes_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["CaseNotes"],"summary":"Create a change stream.","operationId":"CaseNotes.createChangeStream__get_CaseNotes_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/DataSrcs":{"post":{"tags":["DataSrc"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"DataSrc.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DataSrc"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DataSrc"}}},"deprecated":false},"patch":{"tags":["DataSrc"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"DataSrc.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DataSrc"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DataSrc"}}},"deprecated":false},"put":{"tags":["DataSrc"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"DataSrc.replaceOrCreate__put_DataSrcs","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DataSrc"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DataSrc"}}},"deprecated":false},"get":{"tags":["DataSrc"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"DataSrc.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/DataSrc"}}}},"deprecated":false}},"/DataSrcs/replaceOrCreate":{"post":{"tags":["DataSrc"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"DataSrc.replaceOrCreate__post_DataSrcs_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DataSrc"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DataSrc"}}},"deprecated":false}},"/DataSrcs/upsertWithWhere":{"post":{"tags":["DataSrc"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"DataSrc.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/DataSrc"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DataSrc"}}},"deprecated":false}},"/DataSrcs/{id}/exists":{"get":{"tags":["DataSrc"],"summary":"Check whether a model instance exists in the data source.","operationId":"DataSrc.exists__get_DataSrcs_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/DataSrcs/{id}":{"head":{"tags":["DataSrc"],"summary":"Check whether a model instance exists in the data source.","operationId":"DataSrc.exists__head_DataSrcs_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["DataSrc"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"DataSrc.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DataSrc"}}},"deprecated":false},"put":{"tags":["DataSrc"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"DataSrc.replaceById__put_DataSrcs_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DataSrc"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DataSrc"}}},"deprecated":false},"delete":{"tags":["DataSrc"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"DataSrc.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["DataSrc"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"DataSrc.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"DataSrc id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/DataSrc"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DataSrc"}}},"deprecated":false}},"/DataSrcs/{id}/replace":{"post":{"tags":["DataSrc"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"DataSrc.replaceById__post_DataSrcs_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DataSrc"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DataSrc"}}},"deprecated":false}},"/DataSrcs/findOne":{"get":{"tags":["DataSrc"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"DataSrc.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DataSrc"}}},"deprecated":false}},"/DataSrcs/update":{"post":{"tags":["DataSrc"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"DataSrc.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/DataSrc"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/DataSrcs/count":{"get":{"tags":["DataSrc"],"summary":"Count instances of the model matched by where from the data source.","operationId":"DataSrc.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/DataSrcs/change-stream":{"post":{"tags":["DataSrc"],"summary":"Create a change stream.","operationId":"DataSrc.createChangeStream__post_DataSrcs_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["DataSrc"],"summary":"Create a change stream.","operationId":"DataSrc.createChangeStream__get_DataSrcs_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/DeliveryContainerTables":{"post":{"tags":["DeliveryContainerTable"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"DeliveryContainerTable.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DeliveryContainerTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DeliveryContainerTable"}}},"deprecated":false},"patch":{"tags":["DeliveryContainerTable"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"DeliveryContainerTable.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DeliveryContainerTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DeliveryContainerTable"}}},"deprecated":false},"put":{"tags":["DeliveryContainerTable"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"DeliveryContainerTable.replaceOrCreate__put_DeliveryContainerTables","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DeliveryContainerTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DeliveryContainerTable"}}},"deprecated":false},"get":{"tags":["DeliveryContainerTable"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"DeliveryContainerTable.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/DeliveryContainerTable"}}}},"deprecated":false}},"/DeliveryContainerTables/replaceOrCreate":{"post":{"tags":["DeliveryContainerTable"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"DeliveryContainerTable.replaceOrCreate__post_DeliveryContainerTables_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DeliveryContainerTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DeliveryContainerTable"}}},"deprecated":false}},"/DeliveryContainerTables/upsertWithWhere":{"post":{"tags":["DeliveryContainerTable"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"DeliveryContainerTable.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/DeliveryContainerTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DeliveryContainerTable"}}},"deprecated":false}},"/DeliveryContainerTables/{id}/exists":{"get":{"tags":["DeliveryContainerTable"],"summary":"Check whether a model instance exists in the data source.","operationId":"DeliveryContainerTable.exists__get_DeliveryContainerTables_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/DeliveryContainerTables/{id}":{"head":{"tags":["DeliveryContainerTable"],"summary":"Check whether a model instance exists in the data source.","operationId":"DeliveryContainerTable.exists__head_DeliveryContainerTables_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["DeliveryContainerTable"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"DeliveryContainerTable.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DeliveryContainerTable"}}},"deprecated":false},"put":{"tags":["DeliveryContainerTable"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"DeliveryContainerTable.replaceById__put_DeliveryContainerTables_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DeliveryContainerTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DeliveryContainerTable"}}},"deprecated":false},"delete":{"tags":["DeliveryContainerTable"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"DeliveryContainerTable.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["DeliveryContainerTable"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"DeliveryContainerTable.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"DeliveryContainerTable id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/DeliveryContainerTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DeliveryContainerTable"}}},"deprecated":false}},"/DeliveryContainerTables/{id}/replace":{"post":{"tags":["DeliveryContainerTable"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"DeliveryContainerTable.replaceById__post_DeliveryContainerTables_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DeliveryContainerTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DeliveryContainerTable"}}},"deprecated":false}},"/DeliveryContainerTables/findOne":{"get":{"tags":["DeliveryContainerTable"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"DeliveryContainerTable.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DeliveryContainerTable"}}},"deprecated":false}},"/DeliveryContainerTables/update":{"post":{"tags":["DeliveryContainerTable"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"DeliveryContainerTable.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/DeliveryContainerTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/DeliveryContainerTables/count":{"get":{"tags":["DeliveryContainerTable"],"summary":"Count instances of the model matched by where from the data source.","operationId":"DeliveryContainerTable.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/DeliveryContainerTables/change-stream":{"post":{"tags":["DeliveryContainerTable"],"summary":"Create a change stream.","operationId":"DeliveryContainerTable.createChangeStream__post_DeliveryContainerTables_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["DeliveryContainerTable"],"summary":"Create a change stream.","operationId":"DeliveryContainerTable.createChangeStream__get_DeliveryContainerTables_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/DietChanges":{"post":{"tags":["DietChanges"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"DietChanges.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DietChanges"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietChanges"}}},"deprecated":false},"patch":{"tags":["DietChanges"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"DietChanges.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DietChanges"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietChanges"}}},"deprecated":false},"put":{"tags":["DietChanges"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"DietChanges.replaceOrCreate__put_DietChanges","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DietChanges"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietChanges"}}},"deprecated":false},"get":{"tags":["DietChanges"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"DietChanges.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/DietChanges"}}}},"deprecated":false}},"/DietChanges/replaceOrCreate":{"post":{"tags":["DietChanges"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"DietChanges.replaceOrCreate__post_DietChanges_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DietChanges"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietChanges"}}},"deprecated":false}},"/DietChanges/upsertWithWhere":{"post":{"tags":["DietChanges"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"DietChanges.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/DietChanges"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietChanges"}}},"deprecated":false}},"/DietChanges/{id}/exists":{"get":{"tags":["DietChanges"],"summary":"Check whether a model instance exists in the data source.","operationId":"DietChanges.exists__get_DietChanges_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/DietChanges/{id}":{"head":{"tags":["DietChanges"],"summary":"Check whether a model instance exists in the data source.","operationId":"DietChanges.exists__head_DietChanges_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["DietChanges"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"DietChanges.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietChanges"}}},"deprecated":false},"put":{"tags":["DietChanges"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"DietChanges.replaceById__put_DietChanges_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DietChanges"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietChanges"}}},"deprecated":false},"delete":{"tags":["DietChanges"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"DietChanges.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["DietChanges"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"DietChanges.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"DietChanges id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/DietChanges"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietChanges"}}},"deprecated":false}},"/DietChanges/{id}/replace":{"post":{"tags":["DietChanges"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"DietChanges.replaceById__post_DietChanges_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DietChanges"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietChanges"}}},"deprecated":false}},"/DietChanges/findOne":{"get":{"tags":["DietChanges"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"DietChanges.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietChanges"}}},"deprecated":false}},"/DietChanges/update":{"post":{"tags":["DietChanges"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"DietChanges.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/DietChanges"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/DietChanges/count":{"get":{"tags":["DietChanges"],"summary":"Count instances of the model matched by where from the data source.","operationId":"DietChanges.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/DietChanges/change-stream":{"post":{"tags":["DietChanges"],"summary":"Create a change stream.","operationId":"DietChanges.createChangeStream__post_DietChanges_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["DietChanges"],"summary":"Create a change stream.","operationId":"DietChanges.createChangeStream__get_DietChanges_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/DietSubHistories":{"post":{"tags":["DietSubHistory"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"DietSubHistory.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DietSubHistory"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietSubHistory"}}},"deprecated":false},"patch":{"tags":["DietSubHistory"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"DietSubHistory.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DietSubHistory"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietSubHistory"}}},"deprecated":false},"put":{"tags":["DietSubHistory"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"DietSubHistory.replaceOrCreate__put_DietSubHistories","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DietSubHistory"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietSubHistory"}}},"deprecated":false},"get":{"tags":["DietSubHistory"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"DietSubHistory.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/DietSubHistory"}}}},"deprecated":false}},"/DietSubHistories/replaceOrCreate":{"post":{"tags":["DietSubHistory"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"DietSubHistory.replaceOrCreate__post_DietSubHistories_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DietSubHistory"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietSubHistory"}}},"deprecated":false}},"/DietSubHistories/upsertWithWhere":{"post":{"tags":["DietSubHistory"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"DietSubHistory.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/DietSubHistory"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietSubHistory"}}},"deprecated":false}},"/DietSubHistories/{id}/exists":{"get":{"tags":["DietSubHistory"],"summary":"Check whether a model instance exists in the data source.","operationId":"DietSubHistory.exists__get_DietSubHistories_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/DietSubHistories/{id}":{"head":{"tags":["DietSubHistory"],"summary":"Check whether a model instance exists in the data source.","operationId":"DietSubHistory.exists__head_DietSubHistories_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["DietSubHistory"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"DietSubHistory.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietSubHistory"}}},"deprecated":false},"put":{"tags":["DietSubHistory"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"DietSubHistory.replaceById__put_DietSubHistories_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DietSubHistory"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietSubHistory"}}},"deprecated":false},"delete":{"tags":["DietSubHistory"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"DietSubHistory.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["DietSubHistory"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"DietSubHistory.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"DietSubHistory id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/DietSubHistory"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietSubHistory"}}},"deprecated":false}},"/DietSubHistories/{id}/replace":{"post":{"tags":["DietSubHistory"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"DietSubHistory.replaceById__post_DietSubHistories_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DietSubHistory"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietSubHistory"}}},"deprecated":false}},"/DietSubHistories/findOne":{"get":{"tags":["DietSubHistory"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"DietSubHistory.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietSubHistory"}}},"deprecated":false}},"/DietSubHistories/update":{"post":{"tags":["DietSubHistory"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"DietSubHistory.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/DietSubHistory"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/DietSubHistories/count":{"get":{"tags":["DietSubHistory"],"summary":"Count instances of the model matched by where from the data source.","operationId":"DietSubHistory.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/DietSubHistories/change-stream":{"post":{"tags":["DietSubHistory"],"summary":"Create a change stream.","operationId":"DietSubHistory.createChangeStream__post_DietSubHistories_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["DietSubHistory"],"summary":"Create a change stream.","operationId":"DietSubHistory.createChangeStream__get_DietSubHistories_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/DietSubTables":{"post":{"tags":["DietSubTable"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"DietSubTable.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DietSubTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietSubTable"}}},"deprecated":false},"patch":{"tags":["DietSubTable"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"DietSubTable.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DietSubTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietSubTable"}}},"deprecated":false},"put":{"tags":["DietSubTable"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"DietSubTable.replaceOrCreate__put_DietSubTables","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DietSubTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietSubTable"}}},"deprecated":false},"get":{"tags":["DietSubTable"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"DietSubTable.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/DietSubTable"}}}},"deprecated":false}},"/DietSubTables/replaceOrCreate":{"post":{"tags":["DietSubTable"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"DietSubTable.replaceOrCreate__post_DietSubTables_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DietSubTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietSubTable"}}},"deprecated":false}},"/DietSubTables/upsertWithWhere":{"post":{"tags":["DietSubTable"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"DietSubTable.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/DietSubTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietSubTable"}}},"deprecated":false}},"/DietSubTables/{id}/exists":{"get":{"tags":["DietSubTable"],"summary":"Check whether a model instance exists in the data source.","operationId":"DietSubTable.exists__get_DietSubTables_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/DietSubTables/{id}":{"head":{"tags":["DietSubTable"],"summary":"Check whether a model instance exists in the data source.","operationId":"DietSubTable.exists__head_DietSubTables_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["DietSubTable"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"DietSubTable.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietSubTable"}}},"deprecated":false},"put":{"tags":["DietSubTable"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"DietSubTable.replaceById__put_DietSubTables_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DietSubTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietSubTable"}}},"deprecated":false},"delete":{"tags":["DietSubTable"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"DietSubTable.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["DietSubTable"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"DietSubTable.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"DietSubTable id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/DietSubTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietSubTable"}}},"deprecated":false}},"/DietSubTables/{id}/replace":{"post":{"tags":["DietSubTable"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"DietSubTable.replaceById__post_DietSubTables_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DietSubTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietSubTable"}}},"deprecated":false}},"/DietSubTables/findOne":{"get":{"tags":["DietSubTable"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"DietSubTable.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietSubTable"}}},"deprecated":false}},"/DietSubTables/update":{"post":{"tags":["DietSubTable"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"DietSubTable.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/DietSubTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/DietSubTables/count":{"get":{"tags":["DietSubTable"],"summary":"Count instances of the model matched by where from the data source.","operationId":"DietSubTable.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/DietSubTables/change-stream":{"post":{"tags":["DietSubTable"],"summary":"Create a change stream.","operationId":"DietSubTable.createChangeStream__post_DietSubTables_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["DietSubTable"],"summary":"Create a change stream.","operationId":"DietSubTable.createChangeStream__get_DietSubTables_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/DietTables":{"post":{"tags":["DietTable"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"DietTable.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DietTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietTable"}}},"deprecated":false},"patch":{"tags":["DietTable"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"DietTable.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DietTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietTable"}}},"deprecated":false},"put":{"tags":["DietTable"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"DietTable.replaceOrCreate__put_DietTables","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DietTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietTable"}}},"deprecated":false},"get":{"tags":["DietTable"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"DietTable.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/DietTable"}}}},"deprecated":false}},"/DietTables/replaceOrCreate":{"post":{"tags":["DietTable"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"DietTable.replaceOrCreate__post_DietTables_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DietTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietTable"}}},"deprecated":false}},"/DietTables/upsertWithWhere":{"post":{"tags":["DietTable"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"DietTable.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/DietTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietTable"}}},"deprecated":false}},"/DietTables/{id}/exists":{"get":{"tags":["DietTable"],"summary":"Check whether a model instance exists in the data source.","operationId":"DietTable.exists__get_DietTables_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/DietTables/{id}":{"head":{"tags":["DietTable"],"summary":"Check whether a model instance exists in the data source.","operationId":"DietTable.exists__head_DietTables_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["DietTable"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"DietTable.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietTable"}}},"deprecated":false},"put":{"tags":["DietTable"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"DietTable.replaceById__put_DietTables_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DietTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietTable"}}},"deprecated":false},"delete":{"tags":["DietTable"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"DietTable.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["DietTable"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"DietTable.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"DietTable id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/DietTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietTable"}}},"deprecated":false}},"/DietTables/{id}/replace":{"post":{"tags":["DietTable"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"DietTable.replaceById__post_DietTables_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DietTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietTable"}}},"deprecated":false}},"/DietTables/findOne":{"get":{"tags":["DietTable"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"DietTable.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DietTable"}}},"deprecated":false}},"/DietTables/update":{"post":{"tags":["DietTable"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"DietTable.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/DietTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/DietTables/count":{"get":{"tags":["DietTable"],"summary":"Count instances of the model matched by where from the data source.","operationId":"DietTable.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/DietTables/change-stream":{"post":{"tags":["DietTable"],"summary":"Create a change stream.","operationId":"DietTable.createChangeStream__post_DietTables_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["DietTable"],"summary":"Create a change stream.","operationId":"DietTable.createChangeStream__get_DietTables_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/EmployeeTables":{"post":{"tags":["EmployeeTable"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"EmployeeTable.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/EmployeeTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/EmployeeTable"}}},"deprecated":false},"patch":{"tags":["EmployeeTable"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"EmployeeTable.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/EmployeeTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/EmployeeTable"}}},"deprecated":false},"put":{"tags":["EmployeeTable"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"EmployeeTable.replaceOrCreate__put_EmployeeTables","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/EmployeeTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/EmployeeTable"}}},"deprecated":false},"get":{"tags":["EmployeeTable"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"EmployeeTable.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/EmployeeTable"}}}},"deprecated":false}},"/EmployeeTables/replaceOrCreate":{"post":{"tags":["EmployeeTable"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"EmployeeTable.replaceOrCreate__post_EmployeeTables_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/EmployeeTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/EmployeeTable"}}},"deprecated":false}},"/EmployeeTables/upsertWithWhere":{"post":{"tags":["EmployeeTable"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"EmployeeTable.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/EmployeeTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/EmployeeTable"}}},"deprecated":false}},"/EmployeeTables/{id}/exists":{"get":{"tags":["EmployeeTable"],"summary":"Check whether a model instance exists in the data source.","operationId":"EmployeeTable.exists__get_EmployeeTables_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/EmployeeTables/{id}":{"head":{"tags":["EmployeeTable"],"summary":"Check whether a model instance exists in the data source.","operationId":"EmployeeTable.exists__head_EmployeeTables_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["EmployeeTable"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"EmployeeTable.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/EmployeeTable"}}},"deprecated":false},"put":{"tags":["EmployeeTable"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"EmployeeTable.replaceById__put_EmployeeTables_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/EmployeeTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/EmployeeTable"}}},"deprecated":false},"delete":{"tags":["EmployeeTable"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"EmployeeTable.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["EmployeeTable"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"EmployeeTable.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"EmployeeTable id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/EmployeeTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/EmployeeTable"}}},"deprecated":false}},"/EmployeeTables/{id}/replace":{"post":{"tags":["EmployeeTable"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"EmployeeTable.replaceById__post_EmployeeTables_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/EmployeeTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/EmployeeTable"}}},"deprecated":false}},"/EmployeeTables/findOne":{"get":{"tags":["EmployeeTable"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"EmployeeTable.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/EmployeeTable"}}},"deprecated":false}},"/EmployeeTables/update":{"post":{"tags":["EmployeeTable"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"EmployeeTable.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/EmployeeTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/EmployeeTables/count":{"get":{"tags":["EmployeeTable"],"summary":"Count instances of the model matched by where from the data source.","operationId":"EmployeeTable.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/EmployeeTables/change-stream":{"post":{"tags":["EmployeeTable"],"summary":"Create a change stream.","operationId":"EmployeeTable.createChangeStream__post_EmployeeTables_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["EmployeeTable"],"summary":"Create a change stream.","operationId":"EmployeeTable.createChangeStream__get_EmployeeTables_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/FoodPrepTables":{"post":{"tags":["FoodPrepTable"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"FoodPrepTable.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/FoodPrepTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/FoodPrepTable"}}},"deprecated":false},"patch":{"tags":["FoodPrepTable"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"FoodPrepTable.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/FoodPrepTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/FoodPrepTable"}}},"deprecated":false},"put":{"tags":["FoodPrepTable"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"FoodPrepTable.replaceOrCreate__put_FoodPrepTables","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/FoodPrepTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/FoodPrepTable"}}},"deprecated":false},"get":{"tags":["FoodPrepTable"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"FoodPrepTable.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/FoodPrepTable"}}}},"deprecated":false}},"/FoodPrepTables/replaceOrCreate":{"post":{"tags":["FoodPrepTable"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"FoodPrepTable.replaceOrCreate__post_FoodPrepTables_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/FoodPrepTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/FoodPrepTable"}}},"deprecated":false}},"/FoodPrepTables/upsertWithWhere":{"post":{"tags":["FoodPrepTable"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"FoodPrepTable.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/FoodPrepTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/FoodPrepTable"}}},"deprecated":false}},"/FoodPrepTables/{id}/exists":{"get":{"tags":["FoodPrepTable"],"summary":"Check whether a model instance exists in the data source.","operationId":"FoodPrepTable.exists__get_FoodPrepTables_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/FoodPrepTables/{id}":{"head":{"tags":["FoodPrepTable"],"summary":"Check whether a model instance exists in the data source.","operationId":"FoodPrepTable.exists__head_FoodPrepTables_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["FoodPrepTable"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"FoodPrepTable.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/FoodPrepTable"}}},"deprecated":false},"put":{"tags":["FoodPrepTable"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"FoodPrepTable.replaceById__put_FoodPrepTables_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/FoodPrepTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/FoodPrepTable"}}},"deprecated":false},"delete":{"tags":["FoodPrepTable"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"FoodPrepTable.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["FoodPrepTable"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"FoodPrepTable.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"FoodPrepTable id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/FoodPrepTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/FoodPrepTable"}}},"deprecated":false}},"/FoodPrepTables/{id}/replace":{"post":{"tags":["FoodPrepTable"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"FoodPrepTable.replaceById__post_FoodPrepTables_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/FoodPrepTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/FoodPrepTable"}}},"deprecated":false}},"/FoodPrepTables/findOne":{"get":{"tags":["FoodPrepTable"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"FoodPrepTable.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/FoodPrepTable"}}},"deprecated":false}},"/FoodPrepTables/update":{"post":{"tags":["FoodPrepTable"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"FoodPrepTable.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/FoodPrepTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/FoodPrepTables/count":{"get":{"tags":["FoodPrepTable"],"summary":"Count instances of the model matched by where from the data source.","operationId":"FoodPrepTable.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/FoodPrepTables/change-stream":{"post":{"tags":["FoodPrepTable"],"summary":"Create a change stream.","operationId":"FoodPrepTable.createChangeStream__post_FoodPrepTables_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["FoodPrepTable"],"summary":"Create a change stream.","operationId":"FoodPrepTable.createChangeStream__get_FoodPrepTables_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/LifeStages":{"post":{"tags":["LifeStages"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"LifeStages.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/LifeStages"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/LifeStages"}}},"deprecated":false},"patch":{"tags":["LifeStages"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"LifeStages.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/LifeStages"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/LifeStages"}}},"deprecated":false},"put":{"tags":["LifeStages"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"LifeStages.replaceOrCreate__put_LifeStages","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/LifeStages"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/LifeStages"}}},"deprecated":false},"get":{"tags":["LifeStages"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"LifeStages.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/LifeStages"}}}},"deprecated":false}},"/LifeStages/replaceOrCreate":{"post":{"tags":["LifeStages"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"LifeStages.replaceOrCreate__post_LifeStages_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/LifeStages"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/LifeStages"}}},"deprecated":false}},"/LifeStages/upsertWithWhere":{"post":{"tags":["LifeStages"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"LifeStages.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/LifeStages"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/LifeStages"}}},"deprecated":false}},"/LifeStages/{id}/exists":{"get":{"tags":["LifeStages"],"summary":"Check whether a model instance exists in the data source.","operationId":"LifeStages.exists__get_LifeStages_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/LifeStages/{id}":{"head":{"tags":["LifeStages"],"summary":"Check whether a model instance exists in the data source.","operationId":"LifeStages.exists__head_LifeStages_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["LifeStages"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"LifeStages.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/LifeStages"}}},"deprecated":false},"put":{"tags":["LifeStages"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"LifeStages.replaceById__put_LifeStages_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/LifeStages"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/LifeStages"}}},"deprecated":false},"delete":{"tags":["LifeStages"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"LifeStages.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["LifeStages"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"LifeStages.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"LifeStages id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/LifeStages"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/LifeStages"}}},"deprecated":false}},"/LifeStages/{id}/replace":{"post":{"tags":["LifeStages"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"LifeStages.replaceById__post_LifeStages_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/LifeStages"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/LifeStages"}}},"deprecated":false}},"/LifeStages/findOne":{"get":{"tags":["LifeStages"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"LifeStages.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/LifeStages"}}},"deprecated":false}},"/LifeStages/update":{"post":{"tags":["LifeStages"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"LifeStages.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/LifeStages"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/LifeStages/count":{"get":{"tags":["LifeStages"],"summary":"Count instances of the model matched by where from the data source.","operationId":"LifeStages.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/LifeStages/change-stream":{"post":{"tags":["LifeStages"],"summary":"Create a change stream.","operationId":"LifeStages.createChangeStream__post_LifeStages_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["LifeStages"],"summary":"Create a change stream.","operationId":"LifeStages.createChangeStream__get_LifeStages_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/LocationTables":{"post":{"tags":["LocationTable"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"LocationTable.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/LocationTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/LocationTable"}}},"deprecated":false},"patch":{"tags":["LocationTable"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"LocationTable.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/LocationTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/LocationTable"}}},"deprecated":false},"put":{"tags":["LocationTable"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"LocationTable.replaceOrCreate__put_LocationTables","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/LocationTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/LocationTable"}}},"deprecated":false},"get":{"tags":["LocationTable"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"LocationTable.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/LocationTable"}}}},"deprecated":false}},"/LocationTables/replaceOrCreate":{"post":{"tags":["LocationTable"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"LocationTable.replaceOrCreate__post_LocationTables_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/LocationTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/LocationTable"}}},"deprecated":false}},"/LocationTables/upsertWithWhere":{"post":{"tags":["LocationTable"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"LocationTable.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/LocationTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/LocationTable"}}},"deprecated":false}},"/LocationTables/{id}/exists":{"get":{"tags":["LocationTable"],"summary":"Check whether a model instance exists in the data source.","operationId":"LocationTable.exists__get_LocationTables_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/LocationTables/{id}":{"head":{"tags":["LocationTable"],"summary":"Check whether a model instance exists in the data source.","operationId":"LocationTable.exists__head_LocationTables_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["LocationTable"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"LocationTable.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/LocationTable"}}},"deprecated":false},"put":{"tags":["LocationTable"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"LocationTable.replaceById__put_LocationTables_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/LocationTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/LocationTable"}}},"deprecated":false},"delete":{"tags":["LocationTable"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"LocationTable.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["LocationTable"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"LocationTable.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"LocationTable id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/LocationTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/LocationTable"}}},"deprecated":false}},"/LocationTables/{id}/replace":{"post":{"tags":["LocationTable"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"LocationTable.replaceById__post_LocationTables_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/LocationTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/LocationTable"}}},"deprecated":false}},"/LocationTables/findOne":{"get":{"tags":["LocationTable"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"LocationTable.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/LocationTable"}}},"deprecated":false}},"/LocationTables/update":{"post":{"tags":["LocationTable"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"LocationTable.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/LocationTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/LocationTables/count":{"get":{"tags":["LocationTable"],"summary":"Count instances of the model matched by where from the data source.","operationId":"LocationTable.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/LocationTables/change-stream":{"post":{"tags":["LocationTable"],"summary":"Create a change stream.","operationId":"LocationTable.createChangeStream__post_LocationTables_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["LocationTable"],"summary":"Create a change stream.","operationId":"LocationTable.createChangeStream__get_LocationTables_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/Logons":{"post":{"tags":["Logons"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Logons.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Logons"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Logons"}}},"deprecated":false},"patch":{"tags":["Logons"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"Logons.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Logons"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Logons"}}},"deprecated":false},"put":{"tags":["Logons"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Logons.replaceOrCreate__put_Logons","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Logons"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Logons"}}},"deprecated":false},"get":{"tags":["Logons"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Logons.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Logons"}}}},"deprecated":false}},"/Logons/replaceOrCreate":{"post":{"tags":["Logons"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Logons.replaceOrCreate__post_Logons_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Logons"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Logons"}}},"deprecated":false}},"/Logons/upsertWithWhere":{"post":{"tags":["Logons"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"Logons.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Logons"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Logons"}}},"deprecated":false}},"/Logons/{id}/exists":{"get":{"tags":["Logons"],"summary":"Check whether a model instance exists in the data source.","operationId":"Logons.exists__get_Logons_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Logons/{id}":{"head":{"tags":["Logons"],"summary":"Check whether a model instance exists in the data source.","operationId":"Logons.exists__head_Logons_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["Logons"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"Logons.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Logons"}}},"deprecated":false},"put":{"tags":["Logons"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Logons.replaceById__put_Logons_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Logons"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Logons"}}},"deprecated":false},"delete":{"tags":["Logons"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"Logons.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["Logons"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"Logons.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"Logons id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Logons"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Logons"}}},"deprecated":false}},"/Logons/{id}/replace":{"post":{"tags":["Logons"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Logons.replaceById__post_Logons_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Logons"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Logons"}}},"deprecated":false}},"/Logons/findOne":{"get":{"tags":["Logons"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Logons.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Logons"}}},"deprecated":false}},"/Logons/update":{"post":{"tags":["Logons"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"Logons.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Logons"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/Logons/count":{"get":{"tags":["Logons"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Logons.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Logons/change-stream":{"post":{"tags":["Logons"],"summary":"Create a change stream.","operationId":"Logons.createChangeStream__post_Logons_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["Logons"],"summary":"Create a change stream.","operationId":"Logons.createChangeStream__get_Logons_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/NutrDefs":{"post":{"tags":["NutrDef"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"NutrDef.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/NutrDef"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/NutrDef"}}},"deprecated":false},"patch":{"tags":["NutrDef"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"NutrDef.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/NutrDef"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/NutrDef"}}},"deprecated":false},"put":{"tags":["NutrDef"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"NutrDef.replaceOrCreate__put_NutrDefs","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/NutrDef"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/NutrDef"}}},"deprecated":false},"get":{"tags":["NutrDef"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"NutrDef.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/NutrDef"}}}},"deprecated":false}},"/NutrDefs/replaceOrCreate":{"post":{"tags":["NutrDef"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"NutrDef.replaceOrCreate__post_NutrDefs_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/NutrDef"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/NutrDef"}}},"deprecated":false}},"/NutrDefs/upsertWithWhere":{"post":{"tags":["NutrDef"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"NutrDef.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/NutrDef"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/NutrDef"}}},"deprecated":false}},"/NutrDefs/{id}/exists":{"get":{"tags":["NutrDef"],"summary":"Check whether a model instance exists in the data source.","operationId":"NutrDef.exists__get_NutrDefs_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/NutrDefs/{id}":{"head":{"tags":["NutrDef"],"summary":"Check whether a model instance exists in the data source.","operationId":"NutrDef.exists__head_NutrDefs_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["NutrDef"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"NutrDef.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/NutrDef"}}},"deprecated":false},"put":{"tags":["NutrDef"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"NutrDef.replaceById__put_NutrDefs_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/NutrDef"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/NutrDef"}}},"deprecated":false},"delete":{"tags":["NutrDef"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"NutrDef.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["NutrDef"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"NutrDef.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"NutrDef id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/NutrDef"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/NutrDef"}}},"deprecated":false}},"/NutrDefs/{id}/replace":{"post":{"tags":["NutrDef"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"NutrDef.replaceById__post_NutrDefs_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/NutrDef"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/NutrDef"}}},"deprecated":false}},"/NutrDefs/findOne":{"get":{"tags":["NutrDef"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"NutrDef.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/NutrDef"}}},"deprecated":false}},"/NutrDefs/update":{"post":{"tags":["NutrDef"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"NutrDef.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/NutrDef"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/NutrDefs/count":{"get":{"tags":["NutrDef"],"summary":"Count instances of the model matched by where from the data source.","operationId":"NutrDef.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/NutrDefs/change-stream":{"post":{"tags":["NutrDef"],"summary":"Create a change stream.","operationId":"NutrDef.createChangeStream__post_NutrDefs_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["NutrDef"],"summary":"Create a change stream.","operationId":"NutrDef.createChangeStream__get_NutrDefs_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/NutData2s":{"post":{"tags":["NutData2"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"NutData2.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/NutData2"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/NutData2"}}},"deprecated":false},"patch":{"tags":["NutData2"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"NutData2.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/NutData2"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/NutData2"}}},"deprecated":false},"put":{"tags":["NutData2"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"NutData2.replaceOrCreate__put_NutData2s","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/NutData2"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/NutData2"}}},"deprecated":false},"get":{"tags":["NutData2"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"NutData2.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/NutData2"}}}},"deprecated":false}},"/NutData2s/replaceOrCreate":{"post":{"tags":["NutData2"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"NutData2.replaceOrCreate__post_NutData2s_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/NutData2"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/NutData2"}}},"deprecated":false}},"/NutData2s/upsertWithWhere":{"post":{"tags":["NutData2"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"NutData2.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/NutData2"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/NutData2"}}},"deprecated":false}},"/NutData2s/{id}/exists":{"get":{"tags":["NutData2"],"summary":"Check whether a model instance exists in the data source.","operationId":"NutData2.exists__get_NutData2s_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/NutData2s/{id}":{"head":{"tags":["NutData2"],"summary":"Check whether a model instance exists in the data source.","operationId":"NutData2.exists__head_NutData2s_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["NutData2"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"NutData2.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/NutData2"}}},"deprecated":false},"put":{"tags":["NutData2"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"NutData2.replaceById__put_NutData2s_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/NutData2"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/NutData2"}}},"deprecated":false},"delete":{"tags":["NutData2"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"NutData2.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["NutData2"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"NutData2.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"NutData2 id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/NutData2"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/NutData2"}}},"deprecated":false}},"/NutData2s/{id}/replace":{"post":{"tags":["NutData2"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"NutData2.replaceById__post_NutData2s_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/NutData2"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/NutData2"}}},"deprecated":false}},"/NutData2s/findOne":{"get":{"tags":["NutData2"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"NutData2.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/NutData2"}}},"deprecated":false}},"/NutData2s/update":{"post":{"tags":["NutData2"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"NutData2.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/NutData2"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/NutData2s/count":{"get":{"tags":["NutData2"],"summary":"Count instances of the model matched by where from the data source.","operationId":"NutData2.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/NutData2s/change-stream":{"post":{"tags":["NutData2"],"summary":"Create a change stream.","operationId":"NutData2.createChangeStream__post_NutData2s_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["NutData2"],"summary":"Create a change stream.","operationId":"NutData2.createChangeStream__get_NutData2s_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/ParkTables":{"post":{"tags":["ParkTable"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"ParkTable.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/ParkTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ParkTable"}}},"deprecated":false},"patch":{"tags":["ParkTable"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"ParkTable.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/ParkTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ParkTable"}}},"deprecated":false},"put":{"tags":["ParkTable"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"ParkTable.replaceOrCreate__put_ParkTables","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/ParkTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ParkTable"}}},"deprecated":false},"get":{"tags":["ParkTable"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"ParkTable.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/ParkTable"}}}},"deprecated":false}},"/ParkTables/replaceOrCreate":{"post":{"tags":["ParkTable"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"ParkTable.replaceOrCreate__post_ParkTables_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/ParkTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ParkTable"}}},"deprecated":false}},"/ParkTables/upsertWithWhere":{"post":{"tags":["ParkTable"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"ParkTable.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/ParkTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ParkTable"}}},"deprecated":false}},"/ParkTables/{id}/exists":{"get":{"tags":["ParkTable"],"summary":"Check whether a model instance exists in the data source.","operationId":"ParkTable.exists__get_ParkTables_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/ParkTables/{id}":{"head":{"tags":["ParkTable"],"summary":"Check whether a model instance exists in the data source.","operationId":"ParkTable.exists__head_ParkTables_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["ParkTable"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"ParkTable.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ParkTable"}}},"deprecated":false},"put":{"tags":["ParkTable"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"ParkTable.replaceById__put_ParkTables_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/ParkTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ParkTable"}}},"deprecated":false},"delete":{"tags":["ParkTable"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"ParkTable.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["ParkTable"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"ParkTable.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"ParkTable id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/ParkTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ParkTable"}}},"deprecated":false}},"/ParkTables/{id}/replace":{"post":{"tags":["ParkTable"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"ParkTable.replaceById__post_ParkTables_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/ParkTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ParkTable"}}},"deprecated":false}},"/ParkTables/findOne":{"get":{"tags":["ParkTable"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"ParkTable.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ParkTable"}}},"deprecated":false}},"/ParkTables/update":{"post":{"tags":["ParkTable"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"ParkTable.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/ParkTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/ParkTables/count":{"get":{"tags":["ParkTable"],"summary":"Count instances of the model matched by where from the data source.","operationId":"ParkTable.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/ParkTables/change-stream":{"post":{"tags":["ParkTable"],"summary":"Create a change stream.","operationId":"ParkTable.createChangeStream__post_ParkTables_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["ParkTable"],"summary":"Create a change stream.","operationId":"ParkTable.createChangeStream__get_ParkTables_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/PrepNoteTables":{"post":{"tags":["PrepNoteTable"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"PrepNoteTable.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/PrepNoteTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/PrepNoteTable"}}},"deprecated":false},"patch":{"tags":["PrepNoteTable"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"PrepNoteTable.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/PrepNoteTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/PrepNoteTable"}}},"deprecated":false},"put":{"tags":["PrepNoteTable"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"PrepNoteTable.replaceOrCreate__put_PrepNoteTables","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/PrepNoteTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/PrepNoteTable"}}},"deprecated":false},"get":{"tags":["PrepNoteTable"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"PrepNoteTable.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/PrepNoteTable"}}}},"deprecated":false}},"/PrepNoteTables/replaceOrCreate":{"post":{"tags":["PrepNoteTable"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"PrepNoteTable.replaceOrCreate__post_PrepNoteTables_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/PrepNoteTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/PrepNoteTable"}}},"deprecated":false}},"/PrepNoteTables/upsertWithWhere":{"post":{"tags":["PrepNoteTable"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"PrepNoteTable.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/PrepNoteTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/PrepNoteTable"}}},"deprecated":false}},"/PrepNoteTables/{id}/exists":{"get":{"tags":["PrepNoteTable"],"summary":"Check whether a model instance exists in the data source.","operationId":"PrepNoteTable.exists__get_PrepNoteTables_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/PrepNoteTables/{id}":{"head":{"tags":["PrepNoteTable"],"summary":"Check whether a model instance exists in the data source.","operationId":"PrepNoteTable.exists__head_PrepNoteTables_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["PrepNoteTable"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"PrepNoteTable.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/PrepNoteTable"}}},"deprecated":false},"put":{"tags":["PrepNoteTable"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"PrepNoteTable.replaceById__put_PrepNoteTables_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/PrepNoteTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/PrepNoteTable"}}},"deprecated":false},"delete":{"tags":["PrepNoteTable"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"PrepNoteTable.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["PrepNoteTable"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"PrepNoteTable.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"PrepNoteTable id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/PrepNoteTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/PrepNoteTable"}}},"deprecated":false}},"/PrepNoteTables/{id}/replace":{"post":{"tags":["PrepNoteTable"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"PrepNoteTable.replaceById__post_PrepNoteTables_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/PrepNoteTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/PrepNoteTable"}}},"deprecated":false}},"/PrepNoteTables/findOne":{"get":{"tags":["PrepNoteTable"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"PrepNoteTable.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/PrepNoteTable"}}},"deprecated":false}},"/PrepNoteTables/update":{"post":{"tags":["PrepNoteTable"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"PrepNoteTable.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/PrepNoteTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/PrepNoteTables/count":{"get":{"tags":["PrepNoteTable"],"summary":"Count instances of the model matched by where from the data source.","operationId":"PrepNoteTable.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/PrepNoteTables/change-stream":{"post":{"tags":["PrepNoteTable"],"summary":"Create a change stream.","operationId":"PrepNoteTable.createChangeStream__post_PrepNoteTables_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["PrepNoteTable"],"summary":"Create a change stream.","operationId":"PrepNoteTable.createChangeStream__get_PrepNoteTables_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/SrcCds":{"post":{"tags":["SrcCd"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"SrcCd.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/SrcCd"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/SrcCd"}}},"deprecated":false},"patch":{"tags":["SrcCd"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"SrcCd.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/SrcCd"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/SrcCd"}}},"deprecated":false},"put":{"tags":["SrcCd"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"SrcCd.replaceOrCreate__put_SrcCds","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/SrcCd"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/SrcCd"}}},"deprecated":false},"get":{"tags":["SrcCd"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"SrcCd.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/SrcCd"}}}},"deprecated":false}},"/SrcCds/replaceOrCreate":{"post":{"tags":["SrcCd"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"SrcCd.replaceOrCreate__post_SrcCds_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/SrcCd"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/SrcCd"}}},"deprecated":false}},"/SrcCds/upsertWithWhere":{"post":{"tags":["SrcCd"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"SrcCd.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/SrcCd"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/SrcCd"}}},"deprecated":false}},"/SrcCds/{id}/exists":{"get":{"tags":["SrcCd"],"summary":"Check whether a model instance exists in the data source.","operationId":"SrcCd.exists__get_SrcCds_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/SrcCds/{id}":{"head":{"tags":["SrcCd"],"summary":"Check whether a model instance exists in the data source.","operationId":"SrcCd.exists__head_SrcCds_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["SrcCd"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"SrcCd.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/SrcCd"}}},"deprecated":false},"put":{"tags":["SrcCd"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"SrcCd.replaceById__put_SrcCds_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/SrcCd"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/SrcCd"}}},"deprecated":false},"delete":{"tags":["SrcCd"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"SrcCd.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["SrcCd"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"SrcCd.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"SrcCd id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/SrcCd"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/SrcCd"}}},"deprecated":false}},"/SrcCds/{id}/replace":{"post":{"tags":["SrcCd"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"SrcCd.replaceById__post_SrcCds_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/SrcCd"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/SrcCd"}}},"deprecated":false}},"/SrcCds/findOne":{"get":{"tags":["SrcCd"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"SrcCd.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/SrcCd"}}},"deprecated":false}},"/SrcCds/update":{"post":{"tags":["SrcCd"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"SrcCd.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/SrcCd"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/SrcCds/count":{"get":{"tags":["SrcCd"],"summary":"Count instances of the model matched by where from the data source.","operationId":"SrcCd.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/SrcCds/change-stream":{"post":{"tags":["SrcCd"],"summary":"Create a change stream.","operationId":"SrcCd.createChangeStream__post_SrcCds_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["SrcCd"],"summary":"Create a change stream.","operationId":"SrcCd.createChangeStream__get_SrcCds_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/SubenclosureTables":{"post":{"tags":["SubenclosureTable"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"SubenclosureTable.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/SubenclosureTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/SubenclosureTable"}}},"deprecated":false},"patch":{"tags":["SubenclosureTable"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"SubenclosureTable.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/SubenclosureTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/SubenclosureTable"}}},"deprecated":false},"put":{"tags":["SubenclosureTable"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"SubenclosureTable.replaceOrCreate__put_SubenclosureTables","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/SubenclosureTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/SubenclosureTable"}}},"deprecated":false},"get":{"tags":["SubenclosureTable"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"SubenclosureTable.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/SubenclosureTable"}}}},"deprecated":false}},"/SubenclosureTables/replaceOrCreate":{"post":{"tags":["SubenclosureTable"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"SubenclosureTable.replaceOrCreate__post_SubenclosureTables_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/SubenclosureTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/SubenclosureTable"}}},"deprecated":false}},"/SubenclosureTables/upsertWithWhere":{"post":{"tags":["SubenclosureTable"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"SubenclosureTable.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/SubenclosureTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/SubenclosureTable"}}},"deprecated":false}},"/SubenclosureTables/{id}/exists":{"get":{"tags":["SubenclosureTable"],"summary":"Check whether a model instance exists in the data source.","operationId":"SubenclosureTable.exists__get_SubenclosureTables_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/SubenclosureTables/{id}":{"head":{"tags":["SubenclosureTable"],"summary":"Check whether a model instance exists in the data source.","operationId":"SubenclosureTable.exists__head_SubenclosureTables_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["SubenclosureTable"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"SubenclosureTable.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/SubenclosureTable"}}},"deprecated":false},"put":{"tags":["SubenclosureTable"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"SubenclosureTable.replaceById__put_SubenclosureTables_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/SubenclosureTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/SubenclosureTable"}}},"deprecated":false},"delete":{"tags":["SubenclosureTable"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"SubenclosureTable.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["SubenclosureTable"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"SubenclosureTable.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"SubenclosureTable id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/SubenclosureTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/SubenclosureTable"}}},"deprecated":false}},"/SubenclosureTables/{id}/replace":{"post":{"tags":["SubenclosureTable"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"SubenclosureTable.replaceById__post_SubenclosureTables_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/SubenclosureTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/SubenclosureTable"}}},"deprecated":false}},"/SubenclosureTables/findOne":{"get":{"tags":["SubenclosureTable"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"SubenclosureTable.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/SubenclosureTable"}}},"deprecated":false}},"/SubenclosureTables/update":{"post":{"tags":["SubenclosureTable"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"SubenclosureTable.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/SubenclosureTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/SubenclosureTables/count":{"get":{"tags":["SubenclosureTable"],"summary":"Count instances of the model matched by where from the data source.","operationId":"SubenclosureTable.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/SubenclosureTables/change-stream":{"post":{"tags":["SubenclosureTable"],"summary":"Create a change stream.","operationId":"SubenclosureTable.createChangeStream__post_SubenclosureTables_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["SubenclosureTable"],"summary":"Create a change stream.","operationId":"SubenclosureTable.createChangeStream__get_SubenclosureTables_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/TodayDiets":{"post":{"tags":["TodayDiet"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"TodayDiet.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/TodayDiet"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TodayDiet"}}},"deprecated":false},"patch":{"tags":["TodayDiet"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"TodayDiet.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/TodayDiet"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TodayDiet"}}},"deprecated":false},"put":{"tags":["TodayDiet"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"TodayDiet.replaceOrCreate__put_TodayDiets","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/TodayDiet"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TodayDiet"}}},"deprecated":false},"get":{"tags":["TodayDiet"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"TodayDiet.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/TodayDiet"}}}},"deprecated":false}},"/TodayDiets/replaceOrCreate":{"post":{"tags":["TodayDiet"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"TodayDiet.replaceOrCreate__post_TodayDiets_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/TodayDiet"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TodayDiet"}}},"deprecated":false}},"/TodayDiets/upsertWithWhere":{"post":{"tags":["TodayDiet"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"TodayDiet.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/TodayDiet"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TodayDiet"}}},"deprecated":false}},"/TodayDiets/{id}/exists":{"get":{"tags":["TodayDiet"],"summary":"Check whether a model instance exists in the data source.","operationId":"TodayDiet.exists__get_TodayDiets_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/TodayDiets/{id}":{"head":{"tags":["TodayDiet"],"summary":"Check whether a model instance exists in the data source.","operationId":"TodayDiet.exists__head_TodayDiets_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["TodayDiet"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"TodayDiet.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TodayDiet"}}},"deprecated":false},"put":{"tags":["TodayDiet"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"TodayDiet.replaceById__put_TodayDiets_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/TodayDiet"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TodayDiet"}}},"deprecated":false},"delete":{"tags":["TodayDiet"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"TodayDiet.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["TodayDiet"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"TodayDiet.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"TodayDiet id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/TodayDiet"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TodayDiet"}}},"deprecated":false}},"/TodayDiets/{id}/replace":{"post":{"tags":["TodayDiet"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"TodayDiet.replaceById__post_TodayDiets_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/TodayDiet"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TodayDiet"}}},"deprecated":false}},"/TodayDiets/findOne":{"get":{"tags":["TodayDiet"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"TodayDiet.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TodayDiet"}}},"deprecated":false}},"/TodayDiets/update":{"post":{"tags":["TodayDiet"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"TodayDiet.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/TodayDiet"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/TodayDiets/count":{"get":{"tags":["TodayDiet"],"summary":"Count instances of the model matched by where from the data source.","operationId":"TodayDiet.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/TodayDiets/change-stream":{"post":{"tags":["TodayDiet"],"summary":"Create a change stream.","operationId":"TodayDiet.createChangeStream__post_TodayDiets_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["TodayDiet"],"summary":"Create a change stream.","operationId":"TodayDiet.createChangeStream__get_TodayDiets_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/TodayDietSubs":{"post":{"tags":["TodayDietSub"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"TodayDietSub.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/TodayDietSub"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TodayDietSub"}}},"deprecated":false},"patch":{"tags":["TodayDietSub"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"TodayDietSub.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/TodayDietSub"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TodayDietSub"}}},"deprecated":false},"put":{"tags":["TodayDietSub"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"TodayDietSub.replaceOrCreate__put_TodayDietSubs","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/TodayDietSub"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TodayDietSub"}}},"deprecated":false},"get":{"tags":["TodayDietSub"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"TodayDietSub.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/TodayDietSub"}}}},"deprecated":false}},"/TodayDietSubs/replaceOrCreate":{"post":{"tags":["TodayDietSub"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"TodayDietSub.replaceOrCreate__post_TodayDietSubs_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/TodayDietSub"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TodayDietSub"}}},"deprecated":false}},"/TodayDietSubs/upsertWithWhere":{"post":{"tags":["TodayDietSub"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"TodayDietSub.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/TodayDietSub"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TodayDietSub"}}},"deprecated":false}},"/TodayDietSubs/{id}/exists":{"get":{"tags":["TodayDietSub"],"summary":"Check whether a model instance exists in the data source.","operationId":"TodayDietSub.exists__get_TodayDietSubs_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/TodayDietSubs/{id}":{"head":{"tags":["TodayDietSub"],"summary":"Check whether a model instance exists in the data source.","operationId":"TodayDietSub.exists__head_TodayDietSubs_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["TodayDietSub"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"TodayDietSub.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TodayDietSub"}}},"deprecated":false},"put":{"tags":["TodayDietSub"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"TodayDietSub.replaceById__put_TodayDietSubs_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/TodayDietSub"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TodayDietSub"}}},"deprecated":false},"delete":{"tags":["TodayDietSub"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"TodayDietSub.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["TodayDietSub"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"TodayDietSub.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"TodayDietSub id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/TodayDietSub"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TodayDietSub"}}},"deprecated":false}},"/TodayDietSubs/{id}/replace":{"post":{"tags":["TodayDietSub"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"TodayDietSub.replaceById__post_TodayDietSubs_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/TodayDietSub"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TodayDietSub"}}},"deprecated":false}},"/TodayDietSubs/findOne":{"get":{"tags":["TodayDietSub"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"TodayDietSub.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TodayDietSub"}}},"deprecated":false}},"/TodayDietSubs/update":{"post":{"tags":["TodayDietSub"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"TodayDietSub.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/TodayDietSub"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/TodayDietSubs/count":{"get":{"tags":["TodayDietSub"],"summary":"Count instances of the model matched by where from the data source.","operationId":"TodayDietSub.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/TodayDietSubs/change-stream":{"post":{"tags":["TodayDietSub"],"summary":"Create a change stream.","operationId":"TodayDietSub.createChangeStream__post_TodayDietSubs_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["TodayDietSub"],"summary":"Create a change stream.","operationId":"TodayDietSub.createChangeStream__get_TodayDietSubs_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/TomorrowDiets":{"post":{"tags":["TomorrowDiet"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"TomorrowDiet.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/TomorrowDiet"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TomorrowDiet"}}},"deprecated":false},"patch":{"tags":["TomorrowDiet"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"TomorrowDiet.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/TomorrowDiet"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TomorrowDiet"}}},"deprecated":false},"put":{"tags":["TomorrowDiet"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"TomorrowDiet.replaceOrCreate__put_TomorrowDiets","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/TomorrowDiet"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TomorrowDiet"}}},"deprecated":false},"get":{"tags":["TomorrowDiet"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"TomorrowDiet.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/TomorrowDiet"}}}},"deprecated":false}},"/TomorrowDiets/replaceOrCreate":{"post":{"tags":["TomorrowDiet"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"TomorrowDiet.replaceOrCreate__post_TomorrowDiets_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/TomorrowDiet"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TomorrowDiet"}}},"deprecated":false}},"/TomorrowDiets/upsertWithWhere":{"post":{"tags":["TomorrowDiet"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"TomorrowDiet.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/TomorrowDiet"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TomorrowDiet"}}},"deprecated":false}},"/TomorrowDiets/{id}/exists":{"get":{"tags":["TomorrowDiet"],"summary":"Check whether a model instance exists in the data source.","operationId":"TomorrowDiet.exists__get_TomorrowDiets_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/TomorrowDiets/{id}":{"head":{"tags":["TomorrowDiet"],"summary":"Check whether a model instance exists in the data source.","operationId":"TomorrowDiet.exists__head_TomorrowDiets_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["TomorrowDiet"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"TomorrowDiet.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TomorrowDiet"}}},"deprecated":false},"put":{"tags":["TomorrowDiet"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"TomorrowDiet.replaceById__put_TomorrowDiets_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/TomorrowDiet"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TomorrowDiet"}}},"deprecated":false},"delete":{"tags":["TomorrowDiet"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"TomorrowDiet.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["TomorrowDiet"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"TomorrowDiet.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"TomorrowDiet id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/TomorrowDiet"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TomorrowDiet"}}},"deprecated":false}},"/TomorrowDiets/{id}/replace":{"post":{"tags":["TomorrowDiet"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"TomorrowDiet.replaceById__post_TomorrowDiets_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/TomorrowDiet"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TomorrowDiet"}}},"deprecated":false}},"/TomorrowDiets/findOne":{"get":{"tags":["TomorrowDiet"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"TomorrowDiet.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TomorrowDiet"}}},"deprecated":false}},"/TomorrowDiets/update":{"post":{"tags":["TomorrowDiet"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"TomorrowDiet.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/TomorrowDiet"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/TomorrowDiets/count":{"get":{"tags":["TomorrowDiet"],"summary":"Count instances of the model matched by where from the data source.","operationId":"TomorrowDiet.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/TomorrowDiets/change-stream":{"post":{"tags":["TomorrowDiet"],"summary":"Create a change stream.","operationId":"TomorrowDiet.createChangeStream__post_TomorrowDiets_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["TomorrowDiet"],"summary":"Create a change stream.","operationId":"TomorrowDiet.createChangeStream__get_TomorrowDiets_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/TomorrowDietSubs":{"post":{"tags":["TomorrowDietSub"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"TomorrowDietSub.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/TomorrowDietSub"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TomorrowDietSub"}}},"deprecated":false},"patch":{"tags":["TomorrowDietSub"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"TomorrowDietSub.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/TomorrowDietSub"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TomorrowDietSub"}}},"deprecated":false},"put":{"tags":["TomorrowDietSub"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"TomorrowDietSub.replaceOrCreate__put_TomorrowDietSubs","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/TomorrowDietSub"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TomorrowDietSub"}}},"deprecated":false},"get":{"tags":["TomorrowDietSub"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"TomorrowDietSub.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/TomorrowDietSub"}}}},"deprecated":false}},"/TomorrowDietSubs/replaceOrCreate":{"post":{"tags":["TomorrowDietSub"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"TomorrowDietSub.replaceOrCreate__post_TomorrowDietSubs_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/TomorrowDietSub"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TomorrowDietSub"}}},"deprecated":false}},"/TomorrowDietSubs/upsertWithWhere":{"post":{"tags":["TomorrowDietSub"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"TomorrowDietSub.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/TomorrowDietSub"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TomorrowDietSub"}}},"deprecated":false}},"/TomorrowDietSubs/{id}/exists":{"get":{"tags":["TomorrowDietSub"],"summary":"Check whether a model instance exists in the data source.","operationId":"TomorrowDietSub.exists__get_TomorrowDietSubs_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/TomorrowDietSubs/{id}":{"head":{"tags":["TomorrowDietSub"],"summary":"Check whether a model instance exists in the data source.","operationId":"TomorrowDietSub.exists__head_TomorrowDietSubs_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["TomorrowDietSub"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"TomorrowDietSub.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TomorrowDietSub"}}},"deprecated":false},"put":{"tags":["TomorrowDietSub"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"TomorrowDietSub.replaceById__put_TomorrowDietSubs_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/TomorrowDietSub"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TomorrowDietSub"}}},"deprecated":false},"delete":{"tags":["TomorrowDietSub"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"TomorrowDietSub.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["TomorrowDietSub"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"TomorrowDietSub.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"TomorrowDietSub id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/TomorrowDietSub"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TomorrowDietSub"}}},"deprecated":false}},"/TomorrowDietSubs/{id}/replace":{"post":{"tags":["TomorrowDietSub"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"TomorrowDietSub.replaceById__post_TomorrowDietSubs_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/TomorrowDietSub"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TomorrowDietSub"}}},"deprecated":false}},"/TomorrowDietSubs/findOne":{"get":{"tags":["TomorrowDietSub"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"TomorrowDietSub.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/TomorrowDietSub"}}},"deprecated":false}},"/TomorrowDietSubs/update":{"post":{"tags":["TomorrowDietSub"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"TomorrowDietSub.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/TomorrowDietSub"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/TomorrowDietSubs/count":{"get":{"tags":["TomorrowDietSub"],"summary":"Count instances of the model matched by where from the data source.","operationId":"TomorrowDietSub.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/TomorrowDietSubs/change-stream":{"post":{"tags":["TomorrowDietSub"],"summary":"Create a change stream.","operationId":"TomorrowDietSub.createChangeStream__post_TomorrowDietSubs_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["TomorrowDietSub"],"summary":"Create a change stream.","operationId":"TomorrowDietSub.createChangeStream__get_TomorrowDietSubs_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/Weekdays":{"post":{"tags":["Weekdays"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Weekdays.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Weekdays"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Weekdays"}}},"deprecated":false},"patch":{"tags":["Weekdays"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"Weekdays.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Weekdays"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Weekdays"}}},"deprecated":false},"put":{"tags":["Weekdays"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Weekdays.replaceOrCreate__put_Weekdays","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Weekdays"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Weekdays"}}},"deprecated":false},"get":{"tags":["Weekdays"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Weekdays.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Weekdays"}}}},"deprecated":false}},"/Weekdays/replaceOrCreate":{"post":{"tags":["Weekdays"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Weekdays.replaceOrCreate__post_Weekdays_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Weekdays"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Weekdays"}}},"deprecated":false}},"/Weekdays/upsertWithWhere":{"post":{"tags":["Weekdays"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"Weekdays.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Weekdays"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Weekdays"}}},"deprecated":false}},"/Weekdays/{id}/exists":{"get":{"tags":["Weekdays"],"summary":"Check whether a model instance exists in the data source.","operationId":"Weekdays.exists__get_Weekdays_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Weekdays/{id}":{"head":{"tags":["Weekdays"],"summary":"Check whether a model instance exists in the data source.","operationId":"Weekdays.exists__head_Weekdays_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["Weekdays"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"Weekdays.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Weekdays"}}},"deprecated":false},"put":{"tags":["Weekdays"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Weekdays.replaceById__put_Weekdays_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Weekdays"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Weekdays"}}},"deprecated":false},"delete":{"tags":["Weekdays"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"Weekdays.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["Weekdays"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"Weekdays.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"Weekdays id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Weekdays"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Weekdays"}}},"deprecated":false}},"/Weekdays/{id}/replace":{"post":{"tags":["Weekdays"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Weekdays.replaceById__post_Weekdays_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Weekdays"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Weekdays"}}},"deprecated":false}},"/Weekdays/findOne":{"get":{"tags":["Weekdays"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Weekdays.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Weekdays"}}},"deprecated":false}},"/Weekdays/update":{"post":{"tags":["Weekdays"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"Weekdays.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Weekdays"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/Weekdays/count":{"get":{"tags":["Weekdays"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Weekdays.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Weekdays/change-stream":{"post":{"tags":["Weekdays"],"summary":"Create a change stream.","operationId":"Weekdays.createChangeStream__post_Weekdays_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["Weekdays"],"summary":"Create a change stream.","operationId":"Weekdays.createChangeStream__get_Weekdays_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/UnitTables":{"post":{"tags":["UnitTable"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"UnitTable.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/UnitTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UnitTable"}}},"deprecated":false},"patch":{"tags":["UnitTable"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"UnitTable.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/UnitTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UnitTable"}}},"deprecated":false},"put":{"tags":["UnitTable"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"UnitTable.replaceOrCreate__put_UnitTables","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/UnitTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UnitTable"}}},"deprecated":false},"get":{"tags":["UnitTable"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"UnitTable.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/UnitTable"}}}},"deprecated":false}},"/UnitTables/replaceOrCreate":{"post":{"tags":["UnitTable"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"UnitTable.replaceOrCreate__post_UnitTables_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/UnitTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UnitTable"}}},"deprecated":false}},"/UnitTables/upsertWithWhere":{"post":{"tags":["UnitTable"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"UnitTable.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/UnitTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UnitTable"}}},"deprecated":false}},"/UnitTables/{id}/exists":{"get":{"tags":["UnitTable"],"summary":"Check whether a model instance exists in the data source.","operationId":"UnitTable.exists__get_UnitTables_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/UnitTables/{id}":{"head":{"tags":["UnitTable"],"summary":"Check whether a model instance exists in the data source.","operationId":"UnitTable.exists__head_UnitTables_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["UnitTable"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"UnitTable.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UnitTable"}}},"deprecated":false},"put":{"tags":["UnitTable"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"UnitTable.replaceById__put_UnitTables_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/UnitTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UnitTable"}}},"deprecated":false},"delete":{"tags":["UnitTable"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"UnitTable.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["UnitTable"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"UnitTable.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"UnitTable id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/UnitTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UnitTable"}}},"deprecated":false}},"/UnitTables/{id}/replace":{"post":{"tags":["UnitTable"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"UnitTable.replaceById__post_UnitTables_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/UnitTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UnitTable"}}},"deprecated":false}},"/UnitTables/findOne":{"get":{"tags":["UnitTable"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"UnitTable.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UnitTable"}}},"deprecated":false}},"/UnitTables/update":{"post":{"tags":["UnitTable"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"UnitTable.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/UnitTable"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/UnitTables/count":{"get":{"tags":["UnitTable"],"summary":"Count instances of the model matched by where from the data source.","operationId":"UnitTable.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/UnitTables/change-stream":{"post":{"tags":["UnitTable"],"summary":"Create a change stream.","operationId":"UnitTable.createChangeStream__post_UnitTables_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["UnitTable"],"summary":"Create a change stream.","operationId":"UnitTable.createChangeStream__get_UnitTables_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}}},"tags":[{"name":"User"},{"name":"WeightTable"},{"name":"AnimalTable"},{"name":"BudgetIdTable"},{"name":"CaseNotes"},{"name":"DataSrc"},{"name":"DeliveryContainerTable"},{"name":"DietChanges"},{"name":"DietSubHistory"},{"name":"DietSubTable"},{"name":"DietTable"},{"name":"EmployeeTable"},{"name":"FoodPrepTable"},{"name":"LifeStages"},{"name":"LocationTable"},{"name":"Logons"},{"name":"NutrDef"},{"name":"NutData2"},{"name":"ParkTable"},{"name":"PrepNoteTable"},{"name":"SrcCd"},{"name":"SubenclosureTable"},{"name":"TodayDiet"},{"name":"TodayDietSub"},{"name":"TomorrowDiet"},{"name":"TomorrowDietSub"},{"name":"Weekdays"},{"name":"UnitTable"}],"consumes":["application/json","application/x-www-form-urlencoded","application/xml","text/xml"],"produces":["application/json","application/xml","text/xml","application/javascript","text/javascript"],"definitions":{"x-any":{"properties":{}},"AccessToken":{"properties":{"id":{"type":"string"},"ttl":{"default":1209600,"description":"time to live in seconds (2 weeks by default)","type":"number","format":"double"},"scopes":{"description":"Array of scopes granted to this access token.","type":"array","items":{"type":"string"}},"created":{"type":"string","format":"date-time"},"userId":{"type":"number","format":"double"}},"required":["id"],"additionalProperties":false},"User":{"properties":{"realm":{"type":"string"},"username":{"type":"string"},"email":{"type":"string"},"emailVerified":{"type":"boolean"},"id":{"type":"number","format":"double"}},"required":["email"],"additionalProperties":false},"WeightTable":{"properties":{"weightid":{"type":"number","format":"double"},"foodid":{"type":"number","format":"double"},"wtamount":{"type":"number","format":"double"},"unitidnum":{"type":"number","format":"double"},"gmWgt":{"type":"number","format":"double"}},"required":["weightid"],"additionalProperties":false},"AnimalTable":{"properties":{"animalid":{"type":"number","format":"double"},"accessionnum":{"maxLength":255,"type":"string"},"dietid":{"type":"number","format":"double"},"lifestage":{"maxLength":255,"type":"string"},"housename":{"maxLength":255,"type":"string"}},"required":["animalid"],"additionalProperties":false},"BudgetIdTable":{"properties":{"budgetid":{"type":"number","format":"double"},"budgetcode":{"maxLength":255,"type":"string"}},"required":["budgetid"],"additionalProperties":false},"CaseNotes":{"properties":{"casenotesid":{"type":"number","format":"double"},"casedate":{"type":"string","format":"date-time"},"dietid":{"type":"number","format":"double"},"bcs":{"type":"number","format":"double"},"casenote":{"maxLength":4294967295,"type":"string"}},"required":["casenotesid"],"additionalProperties":false},"DataSrc":{"properties":{"datasrcId":{"type":"number","format":"double"},"shortForm":{"maxLength":255,"type":"string"},"authors":{"maxLength":255,"type":"string"},"title":{"maxLength":255,"type":"string"},"year":{"maxLength":4,"type":"string"},"journal":{"maxLength":135,"type":"string"},"volCity":{"maxLength":16,"type":"string"},"issueState":{"maxLength":5,"type":"string"},"startPage":{"maxLength":5,"type":"string"},"endPage":{"maxLength":5,"type":"string"}},"required":["datasrcId"],"additionalProperties":false},"DeliveryContainerTable":{"properties":{"dcid":{"type":"number","format":"double"},"dc":{"maxLength":50,"type":"string"},"locationid":{"type":"number","format":"double"},"exhibit":{"maxLength":255,"type":"string"},"sortorder":{"type":"number","format":"double"},"dccode":{"maxLength":255,"type":"string"},"artemisArea":{"maxLength":255,"type":"string"},"artemisEnclosure":{"maxLength":255,"type":"string"},"artemisSubenclosure":{"maxLength":255,"type":"string"}},"required":["dcid"],"additionalProperties":false},"DietChanges":{"properties":{"dietchangeid":{"type":"number","format":"double"},"dietchangedate":{"type":"string","format":"date-time"},"dietchangetime":{"type":"number","format":"double"},"dietchangereason":{"maxLength":4294967295,"type":"string"},"dietid":{"type":"number","format":"double"},"bgtuserid":{"maxLength":255,"type":"string"}},"required":["dietchangeid"],"additionalProperties":false},"DietSubHistory":{"properties":{"id":{"type":"number","format":"double"},"startdate":{"type":"string","format":"date-time"},"dietid":{"type":"number","format":"double"},"foodid":{"type":"number","format":"double"},"amount":{"type":"number","format":"double"},"unitid":{"type":"number","format":"double"},"su":{"type":"number","format":"double"},"m":{"type":"number","format":"double"},"t":{"type":"number","format":"double"},"w":{"type":"number","format":"double"},"r":{"type":"number","format":"double"},"f":{"type":"number","format":"double"},"s":{"type":"number","format":"double"},"sort":{"type":"number","format":"double"},"tote":{"type":"number","format":"double"},"feeding":{"type":"number","format":"double"},"linenotes":{"maxLength":255,"type":"string"},"bgtuserid":{"maxLength":255,"type":"string"},"indAmount":{"type":"number","format":"double"},"numAnimals":{"type":"number","format":"double"},"frqWeeks":{"type":"number","format":"double"},"frqRotation":{"type":"number","format":"double"}},"required":["id","su","m","t","w","r","f","s"],"additionalProperties":false},"DietSubTable":{"properties":{"id":{"type":"number","format":"double"},"dietid":{"type":"number","format":"double"},"foodid":{"type":"number","format":"double"},"indAmount":{"type":"number","format":"double"},"tempAmount":{"type":"number","format":"double"},"groupAmount":{"type":"number","format":"double"},"unitid":{"type":"number","format":"double"},"su":{"type":"number","format":"double"},"m":{"type":"number","format":"double"},"t":{"type":"number","format":"double"},"w":{"type":"number","format":"double"},"r":{"type":"number","format":"double"},"f":{"type":"number","format":"double"},"s":{"type":"number","format":"double"},"sort":{"type":"number","format":"double"},"tote":{"type":"number","format":"double"},"feeding":{"type":"number","format":"double"},"linenotes":{"maxLength":255,"type":"string"},"frqWeeks":{"type":"number","format":"double"},"frqRotation":{"type":"number","format":"double"}},"required":["id","su","m","t","w","r","f","s"],"additionalProperties":false},"DietTable":{"properties":{"dietid":{"type":"number","format":"double"},"speciesid":{"type":"number","format":"double"},"current":{"type":"number","format":"double"},"userlogin":{"maxLength":255,"type":"string"},"tableid":{"type":"number","format":"double"},"date":{"type":"string","format":"date-time"},"parkid":{"type":"number","format":"double"},"noteid":{"maxLength":28,"type":"string"},"label":{"type":"number","format":"double"},"dcid":{"type":"number","format":"double"},"ncprepares":{"type":"number","format":"double"},"groupid":{"type":"number","format":"double"},"analyzed":{"type":"number","format":"double"},"dateanalyzed":{"type":"string","format":"date-time"},"newdietid":{"maxLength":255,"type":"string"},"numAnimals":{"type":"number","format":"double"}},"required":["dietid","current","label","ncprepares","analyzed"],"additionalProperties":false},"EmployeeTable":{"properties":{"employeeid":{"type":"number","format":"double"},"employee":{"maxLength":50,"type":"string"},"userlogin":{"maxLength":255,"type":"string"},"initials":{"maxLength":255,"type":"string"},"locationid":{"type":"number","format":"double"}},"required":["employeeid"],"additionalProperties":false},"FoodPrepTable":{"properties":{"tableid":{"type":"number","format":"double"},"description":{"maxLength":50,"type":"string"},"tablecode":{"maxLength":255,"type":"string"}},"required":["tableid"],"additionalProperties":false},"LifeStages":{"properties":{"lifestageid":{"type":"number","format":"double"},"lifestagecode":{"maxLength":255,"type":"string"},"lifestagename":{"maxLength":255,"type":"string"}},"required":["lifestageid"],"additionalProperties":false},"LocationTable":{"properties":{"locationid":{"type":"number","format":"double"},"location":{"maxLength":50,"type":"string"},"color":{"maxLength":255,"type":"string"},"shortlocation":{"maxLength":255,"type":"string"}},"required":["locationid"],"additionalProperties":false},"Logons":{"properties":{"loginid":{"type":"number","format":"double"},"windowslogon":{"maxLength":255,"type":"string"},"logondate":{"type":"string","format":"date-time"},"logoffdate":{"type":"string","format":"date-time"},"dbtype":{"maxLength":255,"type":"string"}},"required":["loginid"],"additionalProperties":false},"NutrDef":{"properties":{"nutrNo":{"maxLength":255,"type":"string"},"units":{"maxLength":7,"type":"string"},"tagname":{"maxLength":20,"type":"string"},"nutrdesc":{"maxLength":60,"type":"string"},"numDec":{"maxLength":1,"type":"string"},"srOrder":{"type":"number","format":"double"},"bgtName":{"maxLength":255,"type":"string"},"nutrDefid":{"type":"number","format":"double"}},"required":["nutrDefid"],"additionalProperties":false},"NutData2":{"properties":{"dataId":{"type":"number","format":"double"},"foodid":{"type":"number","format":"double"},"nutrNo":{"maxLength":255,"type":"string"},"nutrVal":{"type":"number","format":"double"},"numDataPts":{"maxLength":255,"type":"string"},"stdError":{"maxLength":255,"type":"string"},"srcCd":{"maxLength":2,"type":"string"},"derivCd":{"maxLength":255,"type":"string"},"refNdbNo":{"maxLength":255,"type":"string"},"addNutrMark":{"maxLength":255,"type":"string"},"numStudies":{"maxLength":255,"type":"string"},"min":{"maxLength":255,"type":"string"},"max":{"maxLength":255,"type":"string"},"df":{"maxLength":255,"type":"string"},"lowEb":{"maxLength":255,"type":"string"},"upEb":{"maxLength":255,"type":"string"},"statCmt":{"maxLength":255,"type":"string"},"addmodDate":{"type":"string","format":"date-time"},"datasrcId":{"type":"number","format":"double"},"datasrcName":{"maxLength":255,"type":"string"},"id":{"type":"number","format":"double"}},"required":["dataId"],"additionalProperties":false},"ParkTable":{"properties":{"parkid":{"type":"number","format":"double"},"park":{"maxLength":50,"type":"string"},"shortpark":{"maxLength":255,"type":"string"}},"required":["parkid"],"additionalProperties":false},"PrepNoteTable":{"properties":{"prepnoteid":{"type":"number","format":"double"},"prepnote":{"maxLength":255,"type":"string"},"dietid":{"type":"number","format":"double"}},"required":["prepnoteid"],"additionalProperties":false},"SrcCd":{"properties":{"srcCd":{"maxLength":2,"type":"string"},"srccdDesc":{"maxLength":60,"type":"string"},"sort":{"type":"number","format":"double"},"srcCdid":{"type":"number","format":"double"}},"required":["srcCd","srcCdid"],"additionalProperties":false},"SubenclosureTable":{"properties":{"seId":{"type":"number","format":"double"},"subenclosure":{"maxLength":50,"type":"string"},"locationid":{"type":"number","format":"double"},"groupid":{"type":"number","format":"double"}},"required":["seId"],"additionalProperties":false},"TodayDiet":{"properties":{"dietid":{"type":"number","format":"double"},"speciesid":{"type":"number","format":"double"},"species":{"maxLength":255,"type":"string"},"current":{"type":"number","format":"double"},"label":{"type":"number","format":"double"},"ncprepares":{"type":"number","format":"double"},"noteid":{"maxLength":28,"type":"string"},"dcid":{"type":"number","format":"double"},"dc":{"maxLength":50,"type":"string"},"location":{"maxLength":50,"type":"string"},"tableid":{"type":"number","format":"double"},"sortorder":{"type":"number","format":"double"},"groupid":{"type":"number","format":"double"},"datadate":{"type":"string","format":"date-time"},"imagelink":{"maxLength":255,"type":"string"},"id":{"type":"number","format":"double"}},"required":["current","label","ncprepares"],"additionalProperties":false},"TodayDietSub":{"properties":{"dietid":{"type":"number","format":"double"},"feeding":{"type":"number","format":"double"},"foodid":{"type":"number","format":"double"},"groupAmount":{"type":"number","format":"double"},"unitid":{"type":"number","format":"double"},"sort":{"type":"number","format":"double"},"tote":{"type":"number","format":"double"},"food":{"maxLength":50,"type":"string"},"unit":{"maxLength":50,"type":"string"},"linenotes":{"maxLength":255,"type":"string"},"meat":{"type":"number","format":"double"},"tableid":{"type":"number","format":"double"},"targettable":{"type":"number","format":"double"},"dcSortorder":{"type":"number","format":"double"},"id":{"type":"number","format":"double"}},"required":["dietid"],"additionalProperties":false},"TomorrowDiet":{"properties":{"dietid":{"type":"number","format":"double"},"speciesid":{"type":"number","format":"double"},"species":{"maxLength":255,"type":"string"},"current":{"type":"number","format":"double"},"label":{"type":"number","format":"double"},"ncprepares":{"type":"number","format":"double"},"noteid":{"maxLength":28,"type":"string"},"dcid":{"type":"number","format":"double"},"dc":{"maxLength":50,"type":"string"},"location":{"maxLength":50,"type":"string"},"tableid":{"type":"number","format":"double"},"sortorder":{"type":"number","format":"double"},"groupid":{"type":"number","format":"double"},"datadate":{"type":"string","format":"date-time"},"imagelink":{"maxLength":255,"type":"string"},"id":{"type":"number","format":"double"}},"required":["current","label","ncprepares"],"additionalProperties":false},"TomorrowDietSub":{"properties":{"dietid":{"type":"number","format":"double"},"feeding":{"type":"number","format":"double"},"foodid":{"type":"number","format":"double"},"groupAmount":{"type":"number","format":"double"},"unitid":{"type":"number","format":"double"},"sort":{"type":"number","format":"double"},"tote":{"type":"number","format":"double"},"food":{"maxLength":50,"type":"string"},"unit":{"maxLength":50,"type":"string"},"linenotes":{"maxLength":255,"type":"string"},"meat":{"type":"number","format":"double"},"tableid":{"type":"number","format":"double"},"targettable":{"type":"number","format":"double"},"dcSortorder":{"type":"number","format":"double"},"id":{"type":"number","format":"double"}},"required":["dietid"],"additionalProperties":false},"Weekdays":{"properties":{"weekdayid":{"type":"number","format":"double"},"samedaytxt":{"maxLength":255,"type":"string"},"nextdaytxt":{"maxLength":255,"type":"string"}},"required":["weekdayid"],"additionalProperties":false},"UnitTable":{"properties":{"unitid":{"type":"number","format":"double"},"unit":{"maxLength":50,"type":"string"},"unittype":{"maxLength":255,"type":"string"},"conversiontog":{"type":"number","format":"double"}},"required":["unitid"],"additionalProperties":false}}}